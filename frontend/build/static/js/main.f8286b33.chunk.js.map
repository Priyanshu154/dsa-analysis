{"version":3,"sources":["Codeforces_input.jsx","Dsa_card.jsx","Display_dsa.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","root2","height","Ci","useState","handle","sethandle","handleid","sethandleid","classes","Grid","container","direction","alignItems","justify","style","minHeight","Box","item","xs","boxShadow","bgcolor","borderRadius","m","p","textAlign","className","noValidate","autoComplete","onSubmit","e","preventDefault","console","log","TextField","id","label","variant","value","onChange","target","Button","color","type","arr","tag","name","url","hs","Dsacards","func2","a","justifyContent","align","href","map","val","i","lg","ml","mt","display","IconButton","aria-label","onClick","x","document","getElementById","hide_show_fun","b","k","Dsa","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.f8286b33.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '35ch',\r\n      },\r\n    },\r\n    root2: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '15ch',\r\n        height: '5ch',\r\n      },\r\n    },\r\n  }));\r\n\r\nvar ans;\r\n\r\nfunction Ci() {\r\n  const [handle,sethandle] = useState();\r\n  const [handleid,sethandleid] = useState();\r\n  function handleupdate(e){\r\n    sethandle(e.target.value);\r\n    console.log({handle});\r\n  }\r\n  function onSubmits(e){\r\n    e.preventDefault();\r\n    sethandleid(handle);\r\n    ans = handleid;\r\n    console.log({handleid});\r\n  }\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n        <Grid container spacing={0} direction=\"column\" alignItems=\"center\"\r\n        justify=\"center\" style={{ minHeight: '100vh'}}>\r\n          <Box item xs={5} boxShadow={3} bgcolor=\"background.paper\" borderRadius={10}\r\n          m={1} p={1}>\r\n              \r\n            <h2 style={{textAlign: \"center\",}}>Enter Codeforces Handle ID</h2>\r\n            <form className={classes.root} noValidate autoComplete=\"off\"\r\n             onSubmit={onSubmits}>\r\n              <TextField id=\"outlined-basic\" label=\"HandleID\" \r\n              variant=\"outlined\" value={handle} onChange={handleupdate}/>\r\n            \r\n            <Box className={classes.root2} textAlign='center'>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>              \r\n            </Box>\r\n            </form>\r\n            <Box m={3} textAlign='center'>\r\n              <Button variant=\"contained\" color=\"secondary\">\r\n                Dont Have an account\r\n              </Button>\r\n            </Box>\r\n\r\n          </Box>      \r\n        </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Ci;\r\nexport {ans};","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport FlipCameraAndroidSharpIcon from '@material-ui/icons/FlipCameraAndroidSharp';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst zip = (a, b) => a.map((k, i) => [k, b[i]]);\r\n\r\nconst arr = [\r\n    {\r\n        tag: \"Dynamic Programming\",\r\n        name: [\"Maximum width\",\"Random Events\",\"Mortal Kombat Tower\"], \r\n        url: [\"https://codeforces.com/problemset/problem/1492/C\",\"https://codeforces.com/problemset/problem/1461/C\",\r\n             \"https://codeforces.com/problemset/problem/1418/C\"],\r\n        hs: \"none\",\r\n    },\r\n    {\r\n        tag: \"Greedy\",\r\n        name: [\"Accidental Victory\",\"Find The Array\",\"Add to Neighbour and Remove\"],\r\n        url: [\"https://codeforces.com/problemset/problem/1490/E\",\"https://codeforces.com/problemset/problem/1463/B\",\r\n             \"https://codeforces.com/problemset/problem/1462/D\"],\r\n        hs: \"none\",\r\n    }\r\n ]\r\n\r\nfunction Dsacards(){\r\n    \r\n    function hide_show_fun(i) {\r\n        var x = document.getElementById(i);\r\n        if (x.style.display === \"none\") {\r\n          x.style.display = \"block\";\r\n        } else {\r\n          x.style.display = \"none\";\r\n        }\r\n      }\r\n\r\n    function func2(a){\r\n        return(\r\n            <>\r\n            <Box justifyContent=\"center\">\r\n                <h2 align=\"center\"><a href = {a[1]} target=\"_blank\">{a[0]}</a></h2>\r\n            </Box>\r\n            </>\r\n        );\r\n    }\r\n\r\n    function func(val,i){\r\n        //console.log(i);\r\n        return(\r\n            <>\r\n            <Grid container spacing={0} direction=\"column\" alignItems=\"center\">\r\n                <Box boxShadow={3} bgcolor=\"background.paper\" m={2} borderRadius={10}\r\n                style={{width: \"450px\"}}>  \r\n                    <Grid container>\r\n                        <Grid item lg={8}>     \r\n                            <Box ml={2}>    \r\n                            <h2>{val.tag}</h2>\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item lg={4}>    \r\n                        <Box mt={2} display=\"flex\" justifyContent=\"flex-end\">\r\n                            <IconButton aria-label=\"Turnit\" onClick={\r\n                               () => {hide_show_fun(i)}}>\r\n                                <FlipCameraAndroidSharpIcon />\r\n                            </IconButton>\r\n                        </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n            <div id={i} style={{display: \"none\"}} align=\"center\">\r\n            <Box boxShadow={3} bgcolor=\"background.paper\" m={2} borderRadius={10}\r\n                style={{width: \"450px\"}} p={1}> \r\n                \r\n                {zip(val.name,val.url).map(func2)}\r\n                    \r\n            </Box>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <>\r\n           {arr.map(func)}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dsacards;","import React from 'react';\r\nimport Dsacards from './Dsa_card';\r\n\r\nfunction Dsa() {\r\n    \r\n    return (\r\n      <>\r\n        <Dsacards/>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default Dsa;","import React from 'react';\nimport {Route,Switch} from 'react-router-dom';\nimport Ci from './Codeforces_input';\nimport Dsa from './Display_dsa';\n\nfunction App() {\n  return (\n    <>\n    <Switch>\n      <Route exact path=\"/\" component={Ci} />\n      <Route exact path=\"/dsa\" component={Dsa} />\n    </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\nimport './index.css'\n\nReactDOM.render(\n  <>\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}