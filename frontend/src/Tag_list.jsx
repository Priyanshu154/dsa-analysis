let tags = [
    {value: '2-sat' , display: '2-Sat' },
    {value: 'binary search' , display: 'Binary Search' },
    {value: 'bitmasks' , display: 'Bitmasks' },
    {value: 'combinatorics' , display: 'Combinatorics' },
    {value: 'constructive algorithms' , display: 'Constructive Algorithms' },
    {value: 'data structures' , display: 'Data Structures' },
    {value: 'dfs and similar' , display: 'Dfs And Similar' },
    {value: 'divide and conquer' , display: 'Divide And Conquer' },
    {value: 'dp' , display: 'Dynamic Programming(DP)' },
    {value: 'dsu' , display: 'Disjoint Set Union(DSU)' },
    {value: 'expression parsing' , display: 'Expression Parsing' },
    {value: 'fft' , display: 'Fft' },
    {value: 'flows' , display: 'Flows' },
    {value: 'games' , display: 'Games' },
    {value: 'geometry' , display: 'Geometry' },
    {value: 'graph matchings' , display: 'Graph Matchings' },
    {value: 'graphs' , display: 'Graphs' },
    {value: 'greedy' , display: 'Greedy' },
    {value: 'hashing' , display: 'Hashing' },
    {value: 'interactive' , display: 'Interactive' },
    {value: 'linked list' , display: 'Linked List' },
    {value: 'math' , display: 'Math' },
    {value: 'matrices' , display: 'Matrices' },
    {value: 'meet-in-the-middle' , display: 'Meet-In-The-Middle' },
    {value: 'number theory' , display: 'Number Theory' },
    {value: 'probabilities' , display: 'Probabilities' },
    {value: 'queue' , display: 'Queue' },
    {value: 'schedules' , display: 'Schedules' },
    {value: 'shortest paths' , display: 'Shortest Paths' },
    {value: 'sortings' , display: 'Sortings' },
    {value: 'stack' , display: 'Stack' },
    {value: 'string suffix structures' , display: 'String Suffix Structures' },
    {value: 'strings' , display: 'Strings' },
    {value: 'ternary search' , display: 'Ternary Search' },
    {value: 'trees' , display: 'Trees' },
    {value: 'two pointers' , display: 'Two Pointers' },
];
export default tags

